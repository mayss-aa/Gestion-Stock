{% extends 'base.html.twig' %}

{% block body %}
{# Page Header Section #}
<div class="page-header">
    <h3 class="page-title">Liste des D√©p√¥ts</h3>
    <div class="header-actions"></div>
</div>

{# Breadcrumb Navigation #}
<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="#">D√©p√¥ts</a></li>
        <li class="breadcrumb-item active" aria-current="page">Liste des D√©p√¥ts</li>
    </ol>
</nav>

{# Main Content Section #}
<div class="row">
    <div class="col-12 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Liste des D√©p√¥ts</h4>
                <div class="table-responsive" style="height: 400px; overflow-y: auto; overflow-x: auto;">
                    {# D√©p√¥ts List Table #}
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>Nom du D√©p√¥t</th>
                                <th>Localisation</th>
                                <th>Capacit√©</th>
                                <th>Unit√© de Capacit√©</th>
                                <th>Type de Stockage</th>
                                <th>Statut</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            {% for depot in depots %}
                            <tr>
                                <td>{{ depot.nomDepot }}</td> {# Nom du d√©p√¥t #}
                                <td>{{ depot.localisationDepot }}</td> {# Localisation du d√©p√¥t #}
                                <td>{{ depot.capaciteDepot }}</td> {# Capacit√© du d√©p√¥t #}
                                <td>{{ depot.uniteCapDepot }}</td> {# Unit√© de capacit√© #}
                                <td>{{ depot.typeStockageDepot }}</td> {# Type de stockage #}
                                <td>{{ depot.statutDepot }}</td> {# Statut du d√©p√¥t #}
                                <td>
                                    {# Bouton AJAX pour afficher / cacher le d√©p√¥t #}
                                    <button class="toggle-visibility btn btn-sm 
                                        {% if depot.isshown %} btn-danger {% else %} btn-success {% endif %}" 
                                        data-id="{{ depot.id }}">
                                        {% if depot.isshown %} Ne plus afficher {% else %} Afficher {% endif %}
                                    </button>
                                    
                                    {# Bouton Modifier #}
                                    <a href="{{ path('backoffice_depot_edit', { 'id': depot.id }) }}" class="btn btn-outline-warning">
                                        Modifier
                                    </a>

                                    {# Formulaire de suppression #}
                                    <form method="post" action="{{ path('backoffice_depot_delete', { 'id': depot.id }) }}" 
                                          style="display:inline;" 
                                          onsubmit="return confirm('√ätes-vous s√ªr de vouloir supprimer ce d√©p√¥t ?');">
                                        <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ depot.id) }}">
                                        <button type="submit" class="btn btn-outline-danger">Supprimer</button>
                                    </form>
                                </td>
                            </tr>
                            {% else %}
                            <tr>
                                <td colspan="7" class="text-center text-muted">Aucun d√©p√¥t enregistr√©.</td>
                            </tr>
                            {% endfor %}
                        </tbody>
                    </table>
                </div>

                {# Action Links #}
                <div class="action-links mt-3">
                    <a href="{{ path('backoffice_depot_index') }}">Retour √† la liste</a>
                </div>
            </div>
        </div>
    </div>
</div>

 
   <script>
document.addEventListener("DOMContentLoaded", function () {
    document.querySelectorAll(".toggle-visibility").forEach(button => {
        button.addEventListener("click", function () {
            let depotId = this.getAttribute("data-id");
            let button = this;

            // D√©sactiver temporairement le bouton et afficher un spinner
            button.disabled = true;
            let originalText = button.innerHTML;
            button.innerHTML = `<span class="spinner-border spinner-border-sm"></span>`;

            fetch(`/depot/isshown/${depotId}`, {
                method: "POST",
                headers: {
                    "X-Requested-With": "XMLHttpRequest",
                    "Content-Type": "application/json"
                },
                credentials: "same-origin",
                body: JSON.stringify({})
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error("Erreur de serveur");
                }
                return response.json();
            })
            .then(data => {
                // Mettre √† jour dynamiquement le bouton
                if (data.isShown) {
                    button.innerHTML = "Ne plus afficher";
                    button.classList.remove("btn-success");
                    button.classList.add("btn-danger");
                } else {
                    button.innerHTML = "Afficher";
                    button.classList.remove("btn-danger");
                    button.classList.add("btn-success");
                }

                // üìå Cacher ou afficher dynamiquement le d√©p√¥t et ses ressources
                updateFrontOfficeDepot(data.id, data.isShown, data.ressourceIds);
            })
            .catch(error => {
                console.error("Erreur AJAX :", error);
                button.innerHTML = originalText;
            })
            .finally(() => {
                button.disabled = false;
            });
        });
    });
});

// üìå Fonction pour cacher/afficher le d√©p√¥t et ses ressources en FrontOffice
function updateFrontOfficeDepot(depotId, isShown, ressourceIds) {
    let frontDepotRow = document.querySelector(`#depot-row-${depotId}`);
    if (frontDepotRow) {
        if (!isShown) {
            frontDepotRow.style.display = "none"; // Cacher le d√©p√¥t
        } else {
            frontDepotRow.style.display = "table-row"; // R√©afficher si n√©cessaire
        }
    }

    // Cacher ou afficher toutes les ressources associ√©es √† ce d√©p√¥t
    ressourceIds.forEach(ressourceId => {
        let ressourceRow = document.querySelector(`#ressource-row-${ressourceId}`);
        if (ressourceRow) {
            if (!isShown) {
                ressourceRow.style.display = "none"; // Cacher la ressource
            } else {
                ressourceRow.style.display = "table-row"; // R√©afficher la ressource
            }
        }
    });
}
</script>



{% endblock %}
